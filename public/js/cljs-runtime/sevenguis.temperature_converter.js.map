{"version":3,"sources":["sevenguis/temperature_converter.cljs"],"mappings":"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","names":["sevenguis.temperature-converter/scales","sevenguis.temperature-converter/precision","sevenguis.temperature-converter/suffix-unicode-symbol","sevenguis.temperature-converter/font","sevenguis.temperature-converter/->master","fahrenheit-temp","cljs.core/identity","sevenguis.temperature-converter/from-master","celsius-temp","js/sevenguis","js/sevenguis.temperature-converter","js/sevenguis.temperature-converter.!app-db","sevenguis.temperature-converter/!app-db","reagent.core.atom","sevenguis.temperature-converter/!focus","reagent.core/cursor","sevenguis.temperature-converter/!master-value","sevenguis.temperature-converter/!user-input","sevenguis.temperature-converter/convert-num-str","converter","input-str","parse-attempt","js/parseFloat","js/isNaN","sevenguis.temperature-converter/update-temp","scale","new-user-input","cljs.core/reset!","cljs.core._EQ_","temp__5735__auto__","conversion","sevenguis.temperature-converter/temperature-input","with-let75229","reagent.ratom/with-let-values","temp__5739__auto__","reagent.ratom/*ratom-context*","c__28532__auto__","reagent.debug/has-console","reagent.debug/tracking","reagent.debug/track-console","js/console","init75230","res__28533__auto__","!focused?","reagent.core/track","cljs.core/deref","!computed-value","G__75231","G__75233","fexpr__75232","!displayed-value","_","sevenguis.util/input-with-suffix","cljs.core.partial","cljs.core/name","clojure.string/capitalize","cljs.core/not","sevenguis.temperature-converter/temperature-converter","cljs.core.into","iter__4529__auto__","s__75241","cljs.core/LazySeq","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__75243","cljs.core/chunk-buffer","i__75242","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__75240","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","cljs.core/chunk-first"],"sourcesContent":["(ns sevenguis.temperature-converter\n  (:require\n    [reagent.core :as r]\n    [sevenguis.util :as util]\n    [clojure.string :as str]))\n\n(def scales #{:fahrenheit :celsius})\n\n(def precision 1)\n\n(def suffix-unicode-symbol {:fahrenheit \\u2109 :celsius \\u2103})\n\n(def font \"20.5px Roboto\")\n\n(def ->master {:fahrenheit (fn fahrenheit->celsius [fahrenheit-temp]\n                             (-> fahrenheit-temp (- 32) (* 5) (/ 9)))\n               :celsius    identity})\n\n(def from-master {:fahrenheit (fn celsius->fahrenheit [celsius-temp]\n                                (when celsius-temp\n                                  (-> celsius-temp (* 9) (/ 5) (+ 32))))\n                  :celsius    identity})\n\n(defonce !app-db (r/atom {:master-value nil\n                          :user-input   nil\n                          :focus        nil}))\n\n(def !focus (r/cursor !app-db [:focus]))\n\n(def !master-value (r/cursor !app-db [:master-value]))\n\n(def !user-input (r/cursor !app-db [:user-input]))\n\n(defn convert-num-str [converter input-str]\n  (let [parse-attempt (js/parseFloat input-str)]\n    (when-not (js/isNaN parse-attempt)\n      (converter parse-attempt))))\n\n(defn update-temp [scale new-user-input]\n  (reset! !user-input new-user-input)\n  (if (= new-user-input \"\")\n    (reset! !master-value nil)\n    (when-let [conversion (convert-num-str (scale ->master) new-user-input)]\n      (reset! !master-value conversion))))\n\n(defn temperature-input [scale]\n  (r/with-let [!focused? (r/track #(= @!focus scale))\n               !computed-value (r/track #(some->\n                                           ((scale from-master) @!master-value)\n                                           (.toFixed precision)))\n               !displayed-value (r/track #(if @!focused?\n                                            @!user-input\n                                            @!computed-value))]\n    [:div {:style    {:display \"inline\"}\n           :on-focus (fn temperature-input-on-focus [_]\n                       (reset! !user-input @!computed-value)\n                       (reset! !focus scale))\n           :on-blur  (fn temperature-input-on-blur []\n                       (reset! !focus nil))}\n     [util/input-with-suffix {:!value       !displayed-value\n                              :value-update (partial update-temp scale)\n                              :placeholder  (-> scale name (str/capitalize))\n                              :suffix       (scale suffix-unicode-symbol)\n                              :hide-suffix? (not @!master-value)\n                              :font         font}]]))\n\n(defn temperature-converter []\n  (into [:div.temperature-converter.gui]\n        (for [scale scales]\n          [temperature-input scale])))\n"]}